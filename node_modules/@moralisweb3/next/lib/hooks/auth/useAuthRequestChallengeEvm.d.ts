import { RequestChallengeEvmRequest } from '@moralisweb3/common-auth-utils';
import { FetchParams } from '../types';
export type RequestChallengeEvmRequestClient = Pick<RequestChallengeEvmRequest, 'chainId' | 'address'>;
export declare const useAuthRequestChallengeEvm: (request?: RequestChallengeEvmRequestClient, fetchParams?: FetchParams) => {
    challenge: {
        id: string;
        message: string;
        profileId: string;
    } | undefined;
    error: any;
    requestChallengeAsync: (params?: RequestChallengeEvmRequestClient | undefined) => Promise<{
        id: string;
        message: string;
        profileId: string;
    } | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        id: string;
        message: string;
        profileId: string;
    } | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useAuthRequestChallengeEvm.d.ts.map